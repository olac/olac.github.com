<?xml version="1.0"?>
<?xml-stylesheet href="OLAC_doc.xsl" type="text/xsl"?>
<!DOCTYPE OLAC_doc SYSTEM "OLAC_doc.dtd">
<OLAC_doc> 
  <header> 
    <status code="draft" type="implementation"/> 
      <title>Viser: A virtual service provider for displaying selected OLAC metadata</title><baseName>viser</baseName> 
      <issued>20021102</issued><previousIssued></previousIssued> 
      <abstract> 
        <p>Documents a service named Viser, hosted on the OLAC web site, that allows language resource sites to post services based on OLAC metadata without having to implement a conventional service provider. Viser works in conjunction with the query facility of the OLAC Aggregator to selectively harvest OLAC metadata and then provide HTML displays of records that match a query. The  service returns an XML document with processing instructions to invoke an XSL stylesheet and set certain display parameters; the actual rendering to HTML happens in the client's browser.</p> 
      </abstract> 
      <editors>Gary Simons, SIL International
        (<url>mailto:gary_simons@sil.org</url>)</editors><copyright>2002 Gary Simons
      (SIL International)</copyright> 
      <changes> 
      </changes> 
  </header> 
  <body> 
    <section> 
      <heading>Introduction</heading> 
      <p>A key feature of the openness of the Open Archives Initiative protocol on which the OLAC Protocol for Metadata Harvesting <cit>OLAC-PMH</cit> is based is that any site of the web is free to become a service provider. That is, it may harvest metadata from the participating data providers and offer a service based on the harvested metadata. In general, it is complicated to implement and operate a complete harvester with the result that few sites rise to the challenge of becoming a service provider.</p> 
      <p>The Open Language Archives Community is seeking to change this by offering services that make it easy for would-be service providers to selectively harvest and present the metadata records that are relevant for their area of interest. The central service in this respect is the query facility of the OLAC Aggregator <cit>OLACA-Query</cit>. It provides a CGI interface through which a would-be service provider may query the complete database of harvested OLAC metadata records. The result is an XML document containing just the metadata records that match the query.</p><p>Viser, the virtual service provider, takes this one step further. It offers a CGI interface that not only processes a query, but also returns the results in such a way that they can be rendered in HTML on the end user's browser. Viser is the counterpart to Vida, OLAC's virtual data provider <cit>Vida</cit>, which makes it possible for a language resource provider to become an OLAC (and OAI) data provider without implementing the OAI protocol.  In a similar way, Viser makes it possible for a language resource site to become an OLAC service provider without implementing the OAI protocol.</p> 
    <p>The purpose of this document is to document Viser and to illustrate how it can be used.</p></section> 
     
     
     
  <section><heading>The CGI interface</heading><p>Viser is a process with a CGI interface. It is located at the following URL. If Viser is invoked without any arguments, it simply returns the page of documentation you are currently reading.</p><blockquote><p><url>http://www.language-archives.org/viser</url></p></blockquote><p>Viser, like <cit>OLACA-Query</cit> on which it is based,  uses the OAI flow control mechanism <cit>OAI-FC</cit> to deal with queries that generate multiple pages of results. This means  the arguments that are valid for the initial request to Viser are different from the arguments on  follow-up requests to get the second and following pages of a multi-page result.</p><p>The interface for an initial query to Viser supports the following five arguments:</p><dl><dt>elements</dt><dd><p>A required argument that specifies the number of metadata elements that are referred to in the selection criterion.</p></dd><dt>sql</dt><dd><p>A required argument that specifies the selection criterion expressed as the content of a WHERE clause in MySQL syntax. </p></dd><dt>count</dt><dd><p>An optional argument that specifies the number of metadata records to return in a single response.  If this argument is not specified, a default value of 20 is assumed. Viser enforces a limit of 500,000 bytes for the length of a response. If this limit is exceeded, one must specify a lower value for this argument. </p></dd><dt>title</dt><dd><p>An optional argument that specifies the title for the HTML page of results. If this argument is not specified, no title value will be given to the stylesheet.  In the default stylesheet, this results in a blank title.</p></dd><dt>xsl</dt><dd><p>An optional argument that specifies the URL of the XSL stylesheet to use for formatting the results on the end user's browser.  If this argument is not specified, the following default stylesheet is used:</p><p><url>http://www.language-archives.org/tools/viser/basic_service.xsl</url></p></dd></dl><p>The first three arguments above are passed directly to the OLACA query facility. See <cit>OLACA-Query</cit> for documentation on how to use these arguments.</p><p>The arguments for the follow-up requests to get the second and following pages of a multi-page result are as follows:</p><dl><dt>resumptionToken</dt><dd><p>A required argument    that specifies the flow control token <cit>OAI-FC</cit> returned in the &lt;resumptionToken&gt; element of the previous Viser request. It instructs OLACA to pick up where it left off in returning the results of the original query.</p></dd><dt>start</dt><dd><p>A required argument  that specifies the sequence number of the first record to be returned on the resulting page.  For instance, if the initial request returned 20 records, then the request to retrieve the second page of results should specify a start value of 21. </p></dd><dt>title</dt><dd><p>An optional argument that specifies the title for the HTML page of results. If this argument is not specified, no title value will be given to the stylesheet.  In the default stylesheet, this results in a blank title.</p></dd><dt>xsl</dt><dd><p>An optional argument that specifies the URL of the XSL stylesheet to use for formatting the results on the end user's browser.  If this argument is not specified, the following default stylesheet is used:</p><p><url>http://www.language-archives.org/tools/viser/basic_service.xsl</url></p></dd></dl></section><section><heading>The result format</heading><p>The result returned to the end user's browser by a Viser request is an XML document. It consists of the ListRecords response <cit>OAI-LR</cit> returned by the corresponding OLACA request <cit>OLACA-Query</cit> with XML processing instructions added at the beginning  to pass  needed parameters to the end user's browser. An XSL stylesheet reads the value of  <i>title,</i> for instance, by executing <tt>&lt;xsl:value-of select="/processing-instruction('title')"/&gt;</tt>. The result format is thus as follows:</p><eg><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="value-of-xsl-or-default"?>
<?title value-of-title?>
<?start value-of-Start?>
<ListRecords>
<!-- ResponseDate, RequestURL, Records, and ResumptionToken -->
</ListRecords>]]></eg><p> The individual metadata records are returned  in OLAC  format <cit>OLAC-MS</cit>. They are in order of their OAI identifiers. If more records match the selection criterion than the number indicated by the <i>count</i> parameter, a resumption token is returned at the end of the response as described in <cit>OAI-FC</cit>.</p><p>This result format is designed for rendering by browsers that are XSL enabled (for instance, Internet Explorer 5.5 and higher).</p></section><section><heading>Using Viser to provide a  service</heading><p>To create a service, a language resource site needs only to create a link that accesses Viser on their own web page. This involves following the specification in <cit>OLACA-Query</cit> to formulate the query and supplying a title for the page of language resources that is returned.  For instance, here are  examples of URLs that create two simple services:</p><ul><li><p>All resources  in or about the Swahili language:</p><p><url>http://www.language-archives.org/viser?
elements=1&amp;sql=e1.code%3D'x-sil-SWA'&amp;title=Swahili+Language+Resources</url></p></li><li><p>A catalog of resources in the TalkBank repository:</p><p><url>http://www.language-archives.org/viser?
elements=0&amp;sql=OaiIdentifier+like+'oai:TalkBank:%25'&amp;title=Resources+Available+Through+TalkBank</url></p></li></ul><p>These URLs exemplify the kind of service that can be created without any knowledge of XSL.  The default stylesheet displays the title, creators, and date of issue for all records that match the selection criterion.  In addition, the OAI identifier for the record is formatted as a link to the lookup service at:</p><eg>http://www.language-archives.org/tools/lookup.php4?identifier=</eg><p>This results in a page that gives an HTML representation of all the information in the OLAC metadata record. If there are additional records that match the selection criterion, a link at the bottom of the page labeled "More resources ..." makes another call to Viser with the resumption token that will retrieve the next batch of records.</p><p>When a site has XSL expertise, it may develop its own stylesheet and use the <i>xsl</i> argument to pass it to Viser. A customized stylesheet could be used to give the service a look and feel that is consistent with the rest of the site. Or a customized stylesheet could  take advantage of more of the information in the metadata records and provide greater functionality with respect to the special interest of the site. One may begin developing a customized stylesheet by downloading the default stylesheet from:</p><blockquote><p><url>http://www.language-archives.org/tools/viser/basic_service.xsl</url></p></blockquote></section>
<section><heading>Implementation</heading>
<p>Viser is implemented as a PHP4 script <cit>PHP</cit>. The script may be downloaded at the following URL:</p>

<blockquote><p><url>http://www.language-archives.org/tools/viser/viser.php4.txt</url></p></blockquote><p>This version of the script returns an XML document as described in <xref>The result format</xref> so that the rendering to HTML can be done by the end user's browser.  This strategy of client-side XSL processing was required in order to prevent overloading the server that is hosting the OLAC site. There is another version of the script at the following URL that includes code to perform the XSL transformation  on the server. The advantage of server-side transformation is, of course, that any browser will be able to render the  result; it does not depend on the end user having a browser that can perform the XSL transformation:</p><blockquote><p><url>http://www.language-archives.org/tools/viser/viser_transform.php4.txt</url></p></blockquote><p>This version is not enabled for execution on the OLAC site, but could be downloaded  and configured to run on another site. It may also serve as a source of ideas for sites hat want to implement a customized service provider that is based on selective harvesting through the OLAC Aggregator.</p></section></body>
   
  <references> 
    <ref abbrev="OLACA-Query">A query facility for selective harvesting of OLAC metadata.<br/>&lt;<url>http://www.language-archives.org/NOTE/query.html</url>&gt;</ref>
    
    <ref abbrev="OLAC-PMH">OLAC Protocol for Metadata Harvesting.<br/>&lt;<url>http://www.language-archives.org/OLAC/protocol.html</url>&gt;</ref>
    
    <ref abbrev="OLAC-MS">OLAC Metadata Set.
      <br/>&lt;<url>http://www.language-archives.org/OLAC/olacms.html</url>&gt;</ref><ref abbrev="OAI-FC">"Flow Control," section 3.4 of     <i>The Open Archives Initiative Protocol for Metadata Harvesting, Version 1.1</i> (2001-07-02).
<br/>&lt;<url>http://www.openarchives.org/OAI/1.1/openarchivesprotocol.htm#Flow%20Control</url>&gt;</ref><ref abbrev="OAI-LR">"ListRecords," section 4.5 of     <i>The Open Archives Initiative Protocol for Metadata Harvesting, Version 1.1</i> (2001-07-02).
<br/>&lt;<url>http://www.openarchives.org/OAI/1.1/openarchivesprotocol.htm#ListRecords</url>&gt;</ref><ref abbrev="PHP">PHP Manual.<br/>&lt;<url>http://www.php.net/manual/en/</url>&gt;</ref><ref abbrev="Vida">OLAC Virtual Data Provider.<br/>&lt;<url>http://www.language-archives.org/vida</url>&gt;</ref>
    
  </references>
</OLAC_doc>
