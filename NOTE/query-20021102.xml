<?xml version="1.0"?>
<?xml-stylesheet href="OLAC_doc.xsl" type="text/xsl"?>
<!DOCTYPE OLAC_doc SYSTEM "OLAC_doc.dtd">
<OLAC_doc> 
  <header> 
    <status code="draft" type="implementation"/> 
      <title>A query facility for selective harvesting of OLAC metadata</title><baseName>query</baseName> 
      <issued>20021102</issued><previousIssued></previousIssued> 
      <abstract> 
        <p>Documents a verb, Query, supported by the CGI interface to the OLAC Aggregator. The purpose of the verb is to support selective harvesting of OLAC metadata, such as would be needed in order to offer a  specialized service based on OLAC metadata. The  request returns a ListRecords response; its parameters support the construction of an SQL query to specify the subset of records to harvest.</p> 
      </abstract> 
      <editors>Gary Simons, SIL International
        (<url>mailto:gary_simons@sil.org</url>)</editors><copyright>2002 Gary Simons
      (SIL International)</copyright> 
      <changes> 
      </changes> 
  </header> 
  <body> 
    <section> 
      <heading>Introduction</heading> 
      <p>A key feature of the openness of the Open Archives Initiative protocol on which the OLAC Protocol for Metadata Harvesting <cit>OLAC-PMH</cit> is based is that any site of the web is free to become a service provider. That is, it may harvest metadata from the participating data providers and offer a service based on the harvested metadata. In general, it is complicated to implement and operate a complete harvester with the result that few sites rise to the challenge of becoming a service provider.</p> 
      <p>The Open Language Archives Community is seeking to change this. It has taken the following steps to make it easy for the members of its community to offer services based on OLAC metadata:</p><ol><li><p>The OLAC Aggregator <cit>OLACA</cit> is a  service that harvests metadata from all OLAC data providers and in turn serves as a single data provider for all OLAC metadata. </p></li><li><p>It is planned that the OLAC Aggregator will support a special OLAC Display format <cit>OLAC-Display</cit> that resolves coded attribute values to display labels and presents a reader-friendly view of OLAC metadata.</p></li><li><p>The OLAC Aggregator supports a query interface (described in this document) that makes it possible for a would-be service provider to harvest only the metadata records of interest.</p></li><li><p>The OLAC Aggregator cooperates with the virtual service provider <cit>Viser</cit> so that the results of a selective harvesting query to OLACA can be rendered as an HTML page that presents a service to an end user.</p></li></ol> 
    <p>The purpose of this document is to document the query interface and to illustrate how it can be used.</p></section> 
     
     
     
  <section><heading>The query interface</heading><p>In addition to the six verbs of the OAI (and OLAC) harvesting protocol <cit>OLAC-PMH</cit>, the OLAC Aggregator supports a seventh&#8212;Query. The Query verb takes the following arguments:</p><dl><dt>elements</dt><dd><p>A required argument that specifies the number of metadata elements that are referred to in the selection criterion.</p></dd><dt>sql</dt><dd><p>A required argument that specifies the selection criterion expressed as the content of a WHERE clause in MySQL syntax. </p></dd><dt>count</dt><dd><p>An optional argument that specifies the number of metadata records to return in a single response.  If this argument is not specified, a default value of 20 is assumed.</p></dd><dt>resumptionToken</dt><dd><p>An exclusive argument  with a value that is the flow control token <cit>OAI-FC</cit> returned by a previous Query request that issued a partial response. It is exclusive in that when it is used, it is the only argument in addition to <i>verb</i>.</p></dd></dl><p>The result of a Query request is a ListRecords response <cit>OAI-LR</cit>. The metadata records are returned in order of their OAI identifiers. In the current implementation, the records are returned in OLAC format; it is intended that they will be returned in OLAC Display format <cit>OLAC-Display</cit> when it is implemented. If more records match the selection criterion than the number indicated by the <i>count</i> parameter, a resumption token is returned at the end of the response as described in <cit>OAI-FC</cit>.</p></section><section><heading>Expressing the selection criterion</heading><p>The selection criterion is expressed  as a <i>where_definition</i> in MySQL syntax <cit>MySQL</cit>. The query has access to each element in a metadata record and to all the parts of an element, which are named as follows:</p><dl style="table"><dt>TagName</dt><dd><p>The generic identifier for the element's XML tag.</p></dd><dt>Content</dt><dd><p>The value of the element's content.</p></dd><dt>Code</dt><dd><p>The value of the element's <i>code</i> attribute.</p></dd><dt>Lang</dt><dd><p>The value of the element's <i>lang</i> attribute.</p></dd><dt>Refine</dt><dd><p>The value of the element's <i>refine</i> attribute.</p></dd><dt>Scheme</dt><dd><p>The value of the element's <i>scheme</i> attribute.</p></dd></dl><p>The first step in designing a query is to identify how many elements in a metadata record must be consulted in order to test the criterion. This number is the value of the <i>elements</i> argument. In the query, the elements are referred to as <tt>e1</tt> through <tt>e</tt><i>n</i>, where <i>n</i> is the value of <i>elements</i>. Thus, the content of the first element is referred to as <tt>e1.Content</tt>, while the generic identifier of the second element is referred to as <tt>e2.TagName</tt>. Selection criterion may also make use of the <tt>OaiIdentifier</tt> column in order to limit a search to the holdings of a particular archive.</p><p>The following are some sample queries.</p><ul><li><p>All resources that pertain to Fijian or Western Fijian (whether in the language or about the language):</p><eg>e1.code='x-sil-FJI' or e1.code='x-sil-WYY'</eg></li><li><p>All resources that are about Fijian:</p><eg>e1.code='x-sil-FJI' and e1.TagName='subject.language'</eg></li><li><p>All resources that conform to the DTD that is deposited as item <i>oai:someArchive:someDTD</i>:</p><eg>e1.TagName='format.markup' and e1.Content='oai:someArchive:someDTD'</eg></li><li><p>All resources in the LDC repository:</p><eg>OaiIdentifier like 'oai:ldc:%'</eg></li><li><p>All resources in the LDC repository that have been issued since the beginning of 2000:</p><eg>OaiIdentifier like 'oai:ldc:%' and e1.TagName='date' and e1.Content&gt;='2000'</eg></li><li><p>All resources that are marked up in XML and are in the French language:</p><eg>e1.Code='text/xml' and e2.tagName='language' and e2.Code='fr'</eg></li></ul><p>The above examples illustrate that testing for the element tag itself is often redundant. For instance, in the last example, 'text/xml' is the <i>code</i> value for the <tt>&lt;format&gt;</tt> element.  It is not necessary to include a test for TagName, however, since the OLAC metadata schema does not allow this code value to occur with any other element.</p><p>In order to pass the criterion expression as an argument in a URL, it must be URL encoded.  The key changes to make are:</p><ul><li><p>Change each space to "+".</p></li><li><p>Change each "=" to "%3D".</p></li><li><p>Change each "%" to "%25".</p></li><li><p>Change each "&amp;" to "%26".</p></li></ul><p>Thus, for instance, the third-to-last and last sample queries listed above translate into the following requests to the OLAC Aggregator (which you may test by clicking on the links):</p><ul><li><p>All resources in the LDC repository:</p><p><url>http://www.language-archives.org/cgi-bin/olaca.pl?verb=Query&amp;
elements=0&amp;sql=OaiIdentifier+like+'oai:ldc:%25'</url></p></li><li><p>All resources that are marked up in XML and are in the French language:</p><p><url>http://www.language-archives.org/cgi-bin/olaca.pl?verb=Query&amp;
elements=2&amp;sql=e1.Code%3D'text/xml'+and+e2.tagName%3D'language'+and+e2.Code%3D'fr'</url></p></li></ul></section>
<section><heading>Implementation</heading>
<p>The Query request is implemented by the <tt>serve_Query</tt> subroutine in the <tt>Aggregator.pm</tt> module and the <tt>getTable_Query</tt> subroutine in the <tt>DB.pm</tt> module. These are part of the <cit>OLAC-Suite</cit> release. More insight on the functioning of the query expression can be gained by consulting the implementation note describing the schema of the MySQL harvesting database [<i>implementation note in progress</i>].</p><p>The Query request builds an SQL query like the following:</p>
<eg>select OaiIdentifier, DateStamp, a.Item_ID from ARCHIVED_ITEM as a 
{, METADATA_ELEM as e1}
where {a.Item_ID=e1.Item_ID and}
( URL-unencoded-sql-argument )
order by OaiIdentifier</eg>
<p>The two code fragments in curly braces are repeated the same number of times as the value of the <i>elements</i> argument. The table alias is incremented with each repetition (e.g., <tt>e1</tt>, <tt>e2</tt>, and so on). The value of the <i>sql</i> argument is URL unencoded and then placed within parentheses in order to ensure the correct precedence of operators with respect to the rest of the WHERE clause.  </p></section></body>
   
  <references> 
    <ref abbrev="OLACA">OLAC Aggregator Service.<br/>&lt;<url>http://www.language-archives.org/cgi-bin/olaca.pl</url>&gt;</ref>
    
    <ref abbrev="OLAC-PMH">OLAC Protocol for Metadata Harvesting.<br/>&lt;<url>http://www.language-archives.org/OLAC/protocol.html</url>&gt;</ref>
    
    <ref abbrev="OLAC-Display">Specifications for an OLAC metadata display format and an OLAC-to-OAI_DC crosswalk.
      <br/>&lt;<url>http://www.language-archives.org/NOTE/olac_display.html</url>&gt;</ref><ref abbrev="OAI-FC">"Flow Control," section 3.4 of     <i>The Open Archives Initiative Protocol for Metadata Harvesting, Version 1.1</i> (2001-07-02).
<br/>&lt;<url>http://www.openarchives.org/OAI/1.1/openarchivesprotocol.htm#Flow%20Control</url>&gt;</ref><ref abbrev="OAI-LR">"ListRecords," section 4.5 of     <i>The Open Archives Initiative Protocol for Metadata Harvesting, Version 1.1</i> (2001-07-02).
<br/>&lt;<url>http://www.openarchives.org/OAI/1.1/openarchivesprotocol.htm#ListRecords</url>&gt;</ref>
    
  <ref abbrev="MySQL">MySQL Language Reference (especially section 6.3).
<br/>&lt;<url>http://www.mysql.com/documentation/mysql/bychapter/manual_Reference.html</url>&gt;</ref><!--<ref abbrev="OLAC-Database">A database for harvested OLAC metadata.<br/>&lt;<url>http://www.language-archives.org/NOTE/olac_database.html</url>&gt;</ref>--><ref abbrev="OLAC-Suite">OLAC Suite: A suite of OLAC harvesting tools implemented in MySQL + Perl.<br/>&lt;<url>http://www.language-archives.org/tools/olac_suite.tgz</url>&gt;</ref><ref abbrev="Viser">Viser: A virtual service provider for displaying selected OLAC metadata.<br/>&lt;<url>http://www.language-archives.org/NOTE/viser.html</url>&gt;</ref></references>
</OLAC_doc>
